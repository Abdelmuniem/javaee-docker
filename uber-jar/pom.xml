<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>javaee-cafe</artifactId>
	<groupId>javaee-cafe</groupId>
	<version>0.1-SNAPSHOT</version>
	<packaging>war</packaging>
	<name>${project.artifactId}</name>
	<description>This is the basic Java EE application used throughout the Docker and Kubertenes demos.
        It is a simple CRUD application. It uses Maven and Java EE 8 (JAX-RS, EJB, CDI, JPA, JSON-B, JSF, Bean Validation).
    </description>
	<properties>
		<javaee.api.version>8.0</javaee.api.version>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<maven.compiler.plugin.version>3.1</maven.compiler.plugin.version>
		<maven.war.plugin.version>2.3</maven.war.plugin.version>
		<maven.license.plugin.version>1.10.b1</maven.license.plugin.version>
		<maven.deploy.skip>true</maven.deploy.skip>
	</properties>
	<dependencies>
		<!-- https://mvnrepository.com/artifact/org.postgresql/postgresql -->

		<dependency>
			<groupId>javax</groupId>
			<artifactId>javaee-api</artifactId>
			<version>${javaee.api.version}</version>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>javax.servlet-api</artifactId>
			<version>3.1.0</version>
			<scope>provided</scope>
		</dependency>

	</dependencies>
	<build>
		<finalName>${project.artifactId}</finalName>
		<plugins>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.1.0</version>
				<executions>
					<execution>
						<id>copy-resources</id>
						<!-- here the phase you need -->
						<phase>validate</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${basedir}/wlp/usr/servers/myServer/</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/liberty/config/</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>${maven.compiler.plugin.version}</version>
				<inherited>true</inherited>
				<configuration>
					<source>1.8</source>
					<target>1.8</target>
				</configuration>
			</plugin>
			<!-- <plugin> <artifactId>maven-war-plugin</artifactId> <version>${maven.war.plugin.version}</version> 
				<configuration> <failOnMissingWebXml>false</failOnMissingWebXml> </configuration> 
				</plugin> -->

			<plugin>
				<groupId>net.wasdev.wlp.maven.plugins</groupId>
				<artifactId>liberty-maven-plugin</artifactId>

				<configuration>


					<packageFile>target/embedded-wlp-liberty.jar</packageFile>
					<include>runnable</include>
					<looseApplication>true</looseApplication>
					<installAppPackages>all</installAppPackages>
					<serverName>myServer</serverName>
				</configuration>


				<executions>
					<execution>
						<phase>package</phase>
						<goals>
							<goal>install-server</goal>
							<goal>create-server</goal>
							<goal>install-feature</goal>
							<goal>install-apps</goal>

							<!-- goal>package-server</goal -->
						</goals>

						<configuration>
							<configFile>${basedir}/src/main/liberty/config/_server.xml</configFile>

						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-dependency-plugin</artifactId>
				<version>3.1.1</version>
				<executions>
					<execution>
						<id>copy</id>
						<phase>package</phase>
						<goals>
							<goal>copy</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<artifactItems>
						<artifactItem>
							<groupId>org.postgresql</groupId>
							<artifactId>postgresql</artifactId>
							<version>42.2.4</version>
							<type>jar</type>
							<overWrite>true</overWrite>
							<outputDirectory>${project.build.directory}/liberty/wlp/usr/servers/myServer/resources/</outputDirectory>
							<destFileName>postgress.jar</destFileName>
						</artifactItem>
					</artifactItems>
					<overWriteReleases>false</overWriteReleases>
					<overWriteSnapshots>true</overWriteSnapshots>
				</configuration>
			</plugin>




		</plugins>
	</build>
</project>
